cmake_minimum_required(VERSION 2.8 FATAL_ERROR)

project(MBS)

set(CMAKE_CXX_FLAGS "-std=c++11")


# Set cmake prefix path to enable cmake to find freenect2
set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} $ENV{HOME}/freenect2/lib/cmake/freenect2)
find_package(freenect2 REQUIRED)
find_package(PCL 1.8 REQUIRED)
find_package(OpenCV 3 REQUIRED)
find_package(Boost REQUIRED)


#find_package(OpenMesh REQUIRED)

message(STATUS "OpenCV library status:")
message(STATUS "    version: ${OpenCV_VERSION}")
message(STATUS "    libraries: ${OpenCV_LIBS}")
message(STATUS "    include path: ${OpenCV_INCLUDE_DIRS}")

include_directories("/usr/include/libusb-1.0/")
include_directories(${freenect2_INCLUDE_DIR})
include_directories(${PCL_INCLUDE_DIRS})
include_directories(${OpenCV_INCLUDE_DIRS})
include_directories(${OpenMesh_INCLUDE_DIRS})
include_directories("/opt/intel/ipp/include")
link_directories(${PCL_LIBRARY_DIRS})
link_directories(${OpenCV_LIBRARY_DIRS})
link_directories(${OpenMesh_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})
add_definitions(${OpenCV_DEFINITIONS})
add_definitions(${OpenMesh_DEFINITIONS})

link_directories("/opt/intel/ipp/lib/intel64/")
set(IPP_LIBS -lippi -lipps -lippcore -lippcv)
message(${IPP_LIBS})

add_executable (MBS src/main.cpp src/MBS.cpp
        src/getParam.cpp include/MBS.hpp)
target_link_libraries (MBS ${PCL_LIBRARIES} ${freenect2_LIBRARIES} ${IPP_LIBS} ${OpenCV_LIBS} ${BOOST_LIBS} OpenMeshCore
        OpenMeshTools)
